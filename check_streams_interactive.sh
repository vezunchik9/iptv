#!/bin/bash

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ IPTV –ø–æ—Ç–æ–∫–æ–≤ —Å –≤–∏–∑—É–∞–ª—å–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é

echo "üé¨ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê IPTV –ü–û–¢–û–ö–û–í"
echo "======================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º VLC –Ω–∞ Mac
VLC_FOUND=false
if [ -f "/Applications/VLC.app/Contents/MacOS/VLC" ]; then
    echo "‚úÖ VLC –Ω–∞–π–¥–µ–Ω –≤ Applications"
    VLC_FOUND=true
elif command -v vlc &> /dev/null; then
    echo "‚úÖ VLC –Ω–∞–π–¥–µ–Ω –≤ PATH"
    VLC_FOUND=true
else
    echo "‚ö†Ô∏è VLC –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω curl"
fi

if command -v curl &> /dev/null; then
    echo "‚úÖ curl –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ùå curl –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
echo ""
echo "üìÅ –î–û–°–¢–£–ü–ù–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò:"
ls -1 categories/*.m3u | sed 's/categories\///g' | sed 's/\.m3u//g' | nl

echo ""
echo "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:"
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –∏–º—è —Ñ–∞–π–ª–∞: " CHOICE

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
if [[ "$CHOICE" =~ ^[0-9]+$ ]]; then
    # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω –Ω–æ–º–µ—Ä
    CATEGORY_FILE=$(ls -1 categories/*.m3u | sed -n "${CHOICE}p")
else
    # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ –∏–º—è
    if [[ "$CHOICE" == *.m3u ]]; then
        CATEGORY_FILE="categories/$CHOICE"
    else
        CATEGORY_FILE="categories/${CHOICE}.m3u"
    fi
fi

if [ ! -f "$CATEGORY_FILE" ]; then
    echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $CATEGORY_FILE"
    exit 1
fi

echo "üì∫ –í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: $CATEGORY_FILE"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤
TOTAL_CHANNELS=$(grep -c "^http" "$CATEGORY_FILE" 2>/dev/null || echo 0)
echo "üìä –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: $TOTAL_CHANNELS"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
echo ""
echo "‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –ü–†–û–í–ï–†–ö–ò:"
echo "1. –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (5—Å –Ω–∞ –∫–∞–Ω–∞–ª, –±–µ–∑ –ø–ª–µ–µ—Ä–∞)"
echo "2. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (10—Å –Ω–∞ –∫–∞–Ω–∞–ª)" 
echo "3. –¢—â–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (15—Å –Ω–∞ –∫–∞–Ω–∞–ª)"
if [ "$VLC_FOUND" = true ]; then
    echo "4. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å –ø–ª–µ–µ—Ä–æ–º (10—Å –Ω–∞ –∫–∞–Ω–∞–ª, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç VLC)"
fi

read -p "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (1-4): " MODE

case $MODE in
    1)
        TEST_DURATION=5
        SHOW_PLAYER=""
        VISUAL=""
        echo "‚ö° –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
        ;;
    2)
        TEST_DURATION=10
        SHOW_PLAYER=""
        VISUAL=""
        echo "üîç –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
        ;;
    3)
        TEST_DURATION=15
        SHOW_PLAYER=""
        VISUAL="--visual"
        echo "üî¨ –¢—â–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
        ;;
    4)
        if [ "$VLC_FOUND" = true ]; then
            TEST_DURATION=10
            SHOW_PLAYER="--show-player"
            VISUAL="--visual"
            echo "üé¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å –ø–ª–µ–µ—Ä–æ–º"
        else
            echo "‚ùå VLC –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É"
            TEST_DURATION=10
            SHOW_PLAYER=""
            VISUAL=""
        fi
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É"
        TEST_DURATION=10
        SHOW_PLAYER=""
        VISUAL=""
        ;;
esac

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–Ω–∞–ª–æ–≤
echo ""
if [ $TOTAL_CHANNELS -gt 10 ]; then
    echo "‚ö†Ô∏è –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–æ–≤ ($TOTAL_CHANNELS)"
    read -p "–°–∫–æ–ª—å–∫–æ –∫–∞–Ω–∞–ª–æ–≤ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å? (Enter = –≤—Å–µ): " MAX_CHANNELS
    if [[ "$MAX_CHANNELS" =~ ^[0-9]+$ ]] && [ $MAX_CHANNELS -gt 0 ]; then
        MAX_CHANNELS_ARG="--max-channels $MAX_CHANNELS"
        echo "üìã –ë—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: $MAX_CHANNELS –∫–∞–Ω–∞–ª–æ–≤"
    else
        MAX_CHANNELS_ARG=""
        echo "üìã –ë—É–¥—É—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –≤—Å–µ –∫–∞–Ω–∞–ª—ã"
    fi
else
    MAX_CHANNELS_ARG=""
    echo "üìã –ë—É–¥—É—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –≤—Å–µ –∫–∞–Ω–∞–ª—ã"
fi

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
mkdir -p reports

# –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
CMD="python3 scripts/interactive_stream_checker.py '$CATEGORY_FILE' --test-duration $TEST_DURATION $VISUAL $SHOW_PLAYER $MAX_CHANNELS_ARG"

echo ""
echo "üöÄ –ó–ê–ü–£–°–ö –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–ô –ü–†–û–í–ï–†–ö–ò"
echo "================================"
echo "üìÅ –§–∞–π–ª: $CATEGORY_FILE"
echo "‚è±Ô∏è –¢–µ—Å—Ç: ${TEST_DURATION}—Å –Ω–∞ –∫–∞–Ω–∞–ª"
echo "üéÆ –ü–ª–µ–µ—Ä: $([ -n "$SHOW_PLAYER" ] && echo "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å" || echo "–°–∫—Ä—ã—Ç—ã–π —Ä–µ–∂–∏–º")"
echo ""

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
eval $CMD

echo ""
echo "‚úÖ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç—ã
LATEST_REPORT=$(ls -t interactive_check_report_*.json 2>/dev/null | head -1)
if [ -f "$LATEST_REPORT" ]; then
    echo "üìä –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $LATEST_REPORT"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    echo ""
    echo "üìà –ö–†–ê–¢–ö–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:"
    python3 -c "
import json
try:
    with open('$LATEST_REPORT', 'r') as f:
        data = json.load(f)
    results = data.get('results', {})
    total = len(results)
    working = sum(1 for r in results.values() if r.get('working', False))
    print(f'   –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: {total}')
    print(f'   –†–∞–±–æ—Ç–∞—é—â–∏—Ö: {working} ({working/total*100:.1f}%)') if total > 0 else print('   –†–∞–±–æ—Ç–∞—é—â–∏—Ö: 0')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print(f'   ')
    print(f'   –î–µ—Ç–∞–ª–∏:')
    for i, (channel_id, result) in enumerate(list(results.items())[:5]):
        status = '‚úÖ' if result.get('working') else '‚ùå'
        name = result.get('channel_name', 'Unknown')[:30]
        print(f'     {status} {name}')
    
    if len(results) > 5:
        print(f'     ... –∏ –µ—â–µ {len(results) - 5} –∫–∞–Ω–∞–ª–æ–≤')
        
except Exception as e:
    print(f'   –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}')
"
fi
