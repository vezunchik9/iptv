#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –†–ï–ê–õ–¨–ù–û–ô –ø—Ä–æ–≤–µ—Ä–∫–∏ IPTV –ø–æ—Ç–æ–∫–æ–≤ —á–µ—Ä–µ–∑ –ø–ª–µ–µ—Ä
# –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏ –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é –∫–∞–∫ –≤ IPTV Checker

echo "üé¨ –†–ï–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê IPTV –ü–û–¢–û–ö–û–í"
echo "================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–ª–µ–µ—Ä–æ–≤
PLAYERS_FOUND=()

if command -v vlc &> /dev/null; then
    PLAYERS_FOUND+=("vlc")
    echo "‚úÖ VLC –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ö†Ô∏è VLC –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if command -v ffplay &> /dev/null; then
    PLAYERS_FOUND+=("ffplay")
    echo "‚úÖ ffplay –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ö†Ô∏è ffplay –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if command -v mpv &> /dev/null; then
    PLAYERS_FOUND+=("mpv")
    echo "‚úÖ mpv –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ö†Ô∏è mpv –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if [ ${#PLAYERS_FOUND[@]} -eq 0 ]; then
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–ª–µ–µ—Ä–∞!"
    echo ""
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–ª–µ–µ—Ä:"
    echo "  macOS:"
    echo "    brew install vlc"
    echo "    brew install ffmpeg  # –¥–ª—è ffplay"
    echo "    brew install mpv"
    echo ""
    echo "  Ubuntu/Debian:"
    echo "    sudo apt install vlc"
    echo "    sudo apt install ffmpeg  # –¥–ª—è ffplay"
    echo "    sudo apt install mpv"
    echo ""
    echo "  CentOS/RHEL:"
    echo "    sudo yum install vlc"
    echo "    sudo yum install ffmpeg"
    echo "    sudo yum install mpv"
    exit 1
fi

echo "üéÆ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–µ–µ—Ä—ã: ${PLAYERS_FOUND[*]}"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∞–π–ª –ø–ª–µ–π–ª–∏—Å—Ç–∞
PLAYLIST_FILE="playlists/televizo_main.m3u"

if [ ! -f "$PLAYLIST_FILE" ]; then
    echo "‚ùå –§–∞–π–ª –ø–ª–µ–π–ª–∏—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $PLAYLIST_FILE"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
mkdir -p reports

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
TIMEOUT=30
CONCURRENT=5
TEST_DURATION=15
PLAYER=""

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
while [[ $# -gt 0 ]]; do
    case $1 in
        --timeout)
            TIMEOUT="$2"
            echo "‚è±Ô∏è –¢–∞–π–º–∞—É—Ç: ${TIMEOUT}—Å"
            shift 2
            ;;
        --concurrent)
            CONCURRENT="$2"
            echo "üîÑ –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: $CONCURRENT"
            shift 2
            ;;
        --test-duration)
            TEST_DURATION="$2"
            echo "üé¨ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∞: ${TEST_DURATION}—Å"
            shift 2
            ;;
        --player)
            PLAYER="$2"
            if [[ " ${PLAYERS_FOUND[*]} " =~ " ${PLAYER} " ]]; then
                echo "üéÆ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–ª–µ–µ—Ä: $PLAYER"
            else
                echo "‚ùå –ü–ª–µ–µ—Ä $PLAYER –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ: ${PLAYERS_FOUND[*]}"
                exit 1
            fi
            shift 2
            ;;
        --quick)
            echo "‚ö° –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
            TIMEOUT=20
            CONCURRENT=10
            TEST_DURATION=10
            shift
            ;;
        --thorough)
            echo "üîç –¢—â–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
            TIMEOUT=60
            CONCURRENT=3
            TEST_DURATION=30
            shift
            ;;
        --help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
            echo ""
            echo "–û–ø—Ü–∏–∏:"
            echo "  --timeout N        –¢–∞–π–º–∞—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 30)"
            echo "  --concurrent N     –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 5)"
            echo "  --test-duration N  –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ—Ç–æ–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 15)"
            echo "  --player NAME      –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–ª–µ–µ—Ä (vlc, ffplay, mpv)"
            echo "  --quick           –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (20—Å —Ç–∞–π–º–∞—É—Ç, 10—Å —Ç–µ—Å—Ç)"
            echo "  --thorough        –¢—â–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (60—Å —Ç–∞–π–º–∞—É—Ç, 30—Å —Ç–µ—Å—Ç)"
            echo "  --help            –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            echo ""
            echo "–ü—Ä–∏–º–µ—Ä—ã:"
            echo "  $0                        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ä–µ–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
            echo "  $0 --quick               # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
            echo "  $0 --thorough            # –¢—â–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
            echo "  $0 --player ffplay       # –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ ffplay"
            echo "  $0 --test-duration 20    # –¢–µ—Å—Ç –ø–æ 20 —Å–µ–∫—É–Ω–¥"
            echo ""
            echo "–í–ù–ò–ú–ê–ù–ò–ï: –†–µ–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏,"
            echo "–Ω–æ –¥–∞–µ—Ç —Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–∞–∫ –≤ IPTV Checker!"
            exit 0
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
done

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞
TIMESTAMP=$(date '+%Y%m%d_%H%M%S')
REPORT_FILE="reports/real_stream_check_${TIMESTAMP}.json"

echo ""
echo "‚öôÔ∏è –ü–ê–†–ê–ú–ï–¢–†–´ –†–ï–ê–õ–¨–ù–û–ô –ü–†–û–í–ï–†–ö–ò:"
echo "   üìÅ –ü–ª–µ–π–ª–∏—Å—Ç: $PLAYLIST_FILE"
echo "   ‚è±Ô∏è –¢–∞–π–º–∞—É—Ç: ${TIMEOUT}—Å"
echo "   üîÑ –ü–æ—Ç–æ–∫–æ–≤: $CONCURRENT"
echo "   üé¨ –¢–µ—Å—Ç –ø–æ—Ç–æ–∫–∞: ${TEST_DURATION}—Å"
echo "   üéÆ –ü–ª–µ–µ—Ä: $([ -n "$PLAYER" ] && echo "$PLAYER" || echo "–ê–≤—Ç–æ-–≤—ã–±–æ—Ä")"
echo "   üìä –û—Ç—á–µ—Ç: $REPORT_FILE"
echo ""

# –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
CMD="python3 scripts/real_stream_checker.py '$PLAYLIST_FILE' --timeout $TIMEOUT --concurrent $CONCURRENT --test-duration $TEST_DURATION --output '$REPORT_FILE'"

if [ -n "$PLAYER" ]; then
    CMD="$CMD --player $PLAYER"
fi

echo "üé¨ –ó–∞–ø—É—Å–∫ –†–ï–ê–õ–¨–ù–û–ô –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ç–æ–∫–æ–≤..."
echo "======================================"
echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!"
echo "   –ö–∞–∂–¥—ã–π –ø–æ—Ç–æ–∫ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è ${TEST_DURATION} —Å–µ–∫—É–Ω–¥"
echo "   –í—Å–µ–≥–æ –ø–æ—Ç–æ–∫–æ–≤: $(wc -l < "$PLAYLIST_FILE" | grep -o '[0-9]*' | head -1)"
echo ""

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
    exit 0
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
eval $CMD

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ –†–µ–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "üìä –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $REPORT_FILE"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ -f "$REPORT_FILE" ]; then
        echo ""
        echo "üìà –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:"
        python3 -c "
import json
try:
    with open('$REPORT_FILE', 'r') as f:
        data = json.load(f)
    stats = data.get('statistics', {})
    print(f\"   –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: {stats.get('total_checked', 0)}\")
    print(f\"   –†–∞–±–æ—Ç–∞—é—â–∏—Ö: {stats.get('working', 0)} ({stats.get('success_rate', 0)}%)\")
    print(f\"   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {stats.get('avg_response_time', 0)}–º—Å\")
    print(f\"   –°—Ä–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏: {stats.get('avg_buffering_events', 0)}\")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–ª–µ–µ—Ä–∞–º
    player_stats = stats.get('player_statistics', {})
    if player_stats:
        print(f\"   \")
        print(f\"   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–ª–µ–µ—Ä–∞–º:\")
        for player, player_stats in player_stats.items():
            total = player_stats.get('total', 0)
            working = player_stats.get('working', 0)
            rate = (working / total * 100) if total > 0 else 0
            print(f\"     {player}: {working}/{total} ({rate:.1f}%)\")
    
except Exception as e:
    print(f\"   –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}\")
"
    fi
    
    echo ""
    echo "üîç –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞:"
    echo "   cat '$REPORT_FILE' | python3 -m json.tool"
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    echo ""
    echo "üõ†Ô∏è –î–û–°–¢–£–ü–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:"
    echo "   üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–∞: cat '$REPORT_FILE' | python3 -m json.tool"
    echo "   üîç –ü–æ–∏—Å–∫ –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â–∏—Ö: jq '.results | to_entries[] | select(.value.working == false)' '$REPORT_FILE'"
    echo "   ‚úÖ –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö: jq '.results | to_entries[] | select(.value.working == true)' '$REPORT_FILE'"
    echo "   üé¨ –ê–Ω–∞–ª–∏–∑ –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏: jq '.results | to_entries[] | select(.value.details.buffering_events > 0)' '$REPORT_FILE'"
    
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ—Ç–æ–∫–æ–≤"
    exit 1
fi
