#!/bin/bash

# –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ IPTV –ø–æ—Ç–æ–∫–æ–≤
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

echo "üöÄ –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê IPTV –ü–û–¢–û–ö–û–í"
echo "===================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if ! command -v curl &> /dev/null; then
    echo "‚ùå curl –Ω–µ –Ω–∞–π–¥–µ–Ω (–Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏)"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
python3 -c "import aiohttp" 2>/dev/null || {
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º aiohttp..."
    pip3 install aiohttp
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∞–π–ª –ø–ª–µ–π–ª–∏—Å—Ç–∞
PLAYLIST_FILE="playlists/televizo_main.m3u"

if [ ! -f "$PLAYLIST_FILE" ]; then
    echo "‚ùå –§–∞–π–ª –ø–ª–µ–π–ª–∏—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $PLAYLIST_FILE"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
mkdir -p reports

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DETAILED=false
TIMEOUT=15
CONCURRENT=15
RETRY=2
METHODS=""

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
while [[ $# -gt 0 ]]; do
    case $1 in
        --detailed)
            DETAILED=true
            echo "üî¨ –í–∫–ª—é—á–µ–Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å ffprobe"
            shift
            ;;
        --timeout)
            TIMEOUT="$2"
            echo "‚è±Ô∏è –¢–∞–π–º–∞—É—Ç: ${TIMEOUT}—Å"
            shift 2
            ;;
        --concurrent)
            CONCURRENT="$2"
            echo "üîÑ –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: $CONCURRENT"
            shift 2
            ;;
        --retry)
            RETRY="$2"
            echo "üîÑ –ü–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫: $RETRY"
            shift 2
            ;;
        --methods)
            METHODS="$2"
            echo "üîß –ú–µ—Ç–æ–¥—ã –ø—Ä–æ–≤–µ—Ä–∫–∏: $METHODS"
            shift 2
            ;;
        --quick)
            echo "‚ö° –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (—Ç–æ–ª—å–∫–æ HTTP –º–µ—Ç–æ–¥—ã)"
            METHODS="http_head http_get"
            TIMEOUT=10
            CONCURRENT=20
            shift
            ;;
        --thorough)
            echo "üîç –¢—â–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–≤—Å–µ –º–µ—Ç–æ–¥—ã)"
            DETAILED=true
            METHODS="http_head http_get curl socket ffprobe"
            TIMEOUT=20
            CONCURRENT=10
            RETRY=3
            shift
            ;;
        --help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
            echo ""
            echo "–û–ø—Ü–∏–∏:"
            echo "  --detailed         –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å ffprobe"
            echo "  --timeout N        –¢–∞–π–º–∞—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 15)"
            echo "  --concurrent N     –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 15)"
            echo "  --retry N          –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 2)"
            echo "  --methods LIST     –ú–µ—Ç–æ–¥—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª"
            echo "                     –î–æ—Å—Ç—É–ø–Ω—ã–µ: http_head http_get curl socket ffprobe"
            echo "  --quick           –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (—Ç–æ–ª—å–∫–æ HTTP –º–µ—Ç–æ–¥—ã)"
            echo "  --thorough        –¢—â–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–≤—Å–µ –º–µ—Ç–æ–¥—ã)"
            echo "  --help            –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            echo ""
            echo "–ü—Ä–∏–º–µ—Ä—ã:"
            echo "  $0                        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
            echo "  $0 --quick               # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
            echo "  $0 --thorough            # –¢—â–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
            echo "  $0 --methods 'curl socket' # –¢–æ–ª—å–∫–æ curl –∏ socket"
            echo "  $0 --detailed --timeout 30 # –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –±–æ–ª—å—à–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º"
            exit 0
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
done

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞
TIMESTAMP=$(date '+%Y%m%d_%H%M%S')
REPORT_FILE="reports/advanced_stream_check_${TIMESTAMP}.json"

echo ""
echo "‚öôÔ∏è –ü–ê–†–ê–ú–ï–¢–†–´ –ü–†–û–í–ï–†–ö–ò:"
echo "   üìÅ –ü–ª–µ–π–ª–∏—Å—Ç: $PLAYLIST_FILE"
echo "   ‚è±Ô∏è –¢–∞–π–º–∞—É—Ç: ${TIMEOUT}—Å"
echo "   üîÑ –ü–æ—Ç–æ–∫–æ–≤: $CONCURRENT"
echo "   üîÑ –ü–æ–≤—Ç–æ—Ä–æ–≤: $RETRY"
echo "   üî¨ –î–µ—Ç–∞–ª—å–Ω–∞—è: $([ "$DETAILED" = true ] && echo "–î–∞" || echo "–ù–µ—Ç")"
echo "   üîß –ú–µ—Ç–æ–¥—ã: $([ -n "$METHODS" ] && echo "$METHODS" || echo "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é")"
echo "   üìä –û—Ç—á–µ—Ç: $REPORT_FILE"
echo ""

# –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É
CMD="python3 scripts/advanced_stream_checker.py '$PLAYLIST_FILE' --timeout $TIMEOUT --concurrent $CONCURRENT --retry $RETRY --output '$REPORT_FILE'"

if [ "$DETAILED" = true ]; then
    CMD="$CMD --detailed"
fi

if [ -n "$METHODS" ]; then
    CMD="$CMD --methods $METHODS"
fi

echo "üöÄ –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏..."
echo "================================="

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
eval $CMD

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "üìä –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $REPORT_FILE"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ -f "$REPORT_FILE" ]; then
        echo ""
        echo "üìà –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:"
        python3 -c "
import json
try:
    with open('$REPORT_FILE', 'r') as f:
        data = json.load(f)
    stats = data.get('statistics', {})
    print(f\"   –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: {stats.get('total_checked', 0)}\")
    print(f\"   –†–∞–±–æ—Ç–∞—é—â–∏—Ö: {stats.get('working', 0)} ({stats.get('success_rate', 0)}%)\")
    print(f\"   –î–æ—Å—Ç—É–ø–Ω—ã—Ö: {stats.get('accessible', 0)} ({stats.get('accessibility_rate', 0)}%)\")
    print(f\"   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞: {stats.get('avg_response_time', 0)}–º—Å\")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Ç–æ–¥–∞–º
    method_stats = stats.get('method_statistics', {})
    if method_stats:
        print(f\"   \")
        print(f\"   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Ç–æ–¥–∞–º –ø—Ä–æ–≤–µ—Ä–∫–∏:\")
        for method, method_stats in method_stats.items():
            total = method_stats.get('total', 0)
            success = method_stats.get('success', 0)
            rate = (success / total * 100) if total > 0 else 0
            print(f\"     {method}: {success}/{total} ({rate:.1f}%)\")
    
except Exception as e:
    print(f\"   –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}\")
"
    fi
    
    echo ""
    echo "üîç –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞:"
    echo "   cat '$REPORT_FILE' | python3 -m json.tool"
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    echo ""
    echo "üõ†Ô∏è –î–û–°–¢–£–ü–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:"
    echo "   üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–∞: cat '$REPORT_FILE' | python3 -m json.tool"
    echo "   üîç –ü–æ–∏—Å–∫ –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â–∏—Ö: jq '.results | to_entries[] | select(.value.working == false)' '$REPORT_FILE'"
    echo "   ‚úÖ –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö: jq '.results | to_entries[] | select(.value.working == true)' '$REPORT_FILE'"
    
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ—Ç–æ–∫–æ–≤"
    exit 1
fi
